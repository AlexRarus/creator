version: '3.9'

volumes:
  frontend_static_volume:
  backend_static_volume:
  backend_media_volume:
  ssl_cert_volume:
  ssr_logs_volume:

services:
  django:
#    build:
#      context: ../backend
#      dockerfile: Dockerfile
    image: rarus/creator_backend:latest
    container_name: django
    restart: always
    command: gunicorn creator.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./.env
    volumes:
      - backend_static_volume:/code/static/
      - backend_media_volume:/code/media/

  frontend:
#    build:
#      context: ../ # нужно для того что-бы подцепить репозиторий .git
#      dockerfile: ./frontend/Dockerfile
    container_name: frontend
    image: rarus/creator_frontend:latest
    volumes:
      - frontend_static_volume:/app/result_build/build/

  frontend_ssr:
#    build:
#      context: ../ # нужно для того что-бы подцепить репозиторий .git
#      dockerfile: ./frontend/Dockerfile.ssr
    container_name: frontend_ssr
    restart: always
    command: pm2-runtime ecosystem.config.js
    image: rarus/creator_frontend_ssr:latest
    env_file:
      - ./.env
    volumes:
      - frontend_static_volume:/app/build/
      - ssr_logs_volume:/app/ssr-logs/
    depends_on:
      - frontend

  redoc:
    image: redocly/redoc
    container_name: redoc
    environment:
        SPEC_URL: ${PUBLIC_URL}static/api/docs/openapi-schema.yml

  nginx:
    image: library/nginx:1.20.1
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_static_volume:/usr/share/nginx/html/
      - backend_static_volume:/usr/share/nginx/html/backend/static/
      - backend_media_volume:/usr/share/nginx/html/backend/media/
      - ssr_logs_volume:/usr/share/nginx/html/ssr-logs/
      - ../ssl:/etc/nginx/ssl/  # <- cert
    depends_on:
      - django
      - frontend_ssr
      - redoc
