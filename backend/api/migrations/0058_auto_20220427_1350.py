# Generated by Django 3.2.8 on 2022-04-27 13:50

import api.models.avatar
import api.models.image
import creator.yandex_s3_storage
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0057_auto_20220209_0920"),
    ]

    operations = [
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        max_length=35, verbose_name="Наименование"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=80,
                        null=True,
                        verbose_name="Строковый идентификатор",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шаблон",
                "verbose_name_plural": "Шаблоны",
                "ordering": ("id",),
            },
        ),
        migrations.AlterField(
            model_name="avatar",
            name="previewFile",
            field=models.ImageField(
                blank=True,
                help_text="Выберите файл",
                null=True,
                storage=creator.yandex_s3_storage.ClientDocsStorage(),
                upload_to=api.models.avatar.get_upload_path,
                verbose_name="Файл для предпросмотра",
            ),
        ),
        migrations.AlterField(
            model_name="avatar",
            name="sourceFile",
            field=models.ImageField(
                blank=True,
                help_text="Выберите файл",
                null=True,
                storage=creator.yandex_s3_storage.ClientDocsStorage(),
                upload_to=api.models.avatar.get_upload_path,
                verbose_name="Исходный Файл",
            ),
        ),
        migrations.AlterField(
            model_name="image",
            name="file",
            field=models.ImageField(
                blank=True,
                help_text="Выберите файл",
                null=True,
                storage=creator.yandex_s3_storage.ClientDocsStorage(),
                upload_to=api.models.image.get_upload_path,
                verbose_name="Файл",
            ),
        ),
        migrations.AlterField(
            model_name="image",
            name="previewFile",
            field=models.ImageField(
                blank=True,
                help_text="Выберите файл",
                null=True,
                storage=creator.yandex_s3_storage.ClientDocsStorage(),
                upload_to=api.models.image.get_upload_path,
                verbose_name="Файл для предпросмотра",
            ),
        ),
        migrations.AlterField(
            model_name="theme",
            name="animation",
            field=models.FileField(
                blank=True,
                help_text="Выберите файл анимации",
                null=True,
                storage=creator.yandex_s3_storage.ClientDocsStorage(),
                upload_to="themes/animations/",
                verbose_name="Анимация",
            ),
        ),
        migrations.AlterField(
            model_name="themetype",
            name="slug",
            field=models.SlugField(
                blank=True,
                default="default",
                max_length=255,
                unique=True,
                verbose_name="Слаг типа темы",
            ),
        ),
        migrations.CreateModel(
            name="TemplateBlockRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.block",
                        verbose_name="блок",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.template",
                        verbose_name="шаблон",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь блока с шаблоном",
                "verbose_name_plural": "Связи блоков с шаблонами",
                "ordering": ("order",),
            },
        ),
        migrations.AddField(
            model_name="template",
            name="blocks",
            field=models.ManyToManyField(
                related_name="templates",
                through="api.TemplateBlockRelation",
                to="api.Block",
                verbose_name="Блоки",
            ),
        ),
        migrations.AddField(
            model_name="template",
            name="theme",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="templates",
                to="api.theme",
                verbose_name="Тема",
            ),
        ),
        migrations.AddConstraint(
            model_name="templateblockrelation",
            constraint=models.UniqueConstraint(
                fields=("block", "template"), name="template_block_relation"
            ),
        ),
        migrations.AddConstraint(
            model_name="template",
            constraint=models.UniqueConstraint(
                fields=("slug", "author"),
                name="author_slug_constraint_template",
            ),
        ),
    ]
